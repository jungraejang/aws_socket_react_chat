{"ast":null,"code":"var _jsxFileName = \"/Users/jungrae/Desktop/Projects/react_socket_io_chat/frontend/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport fire from \"./config/Fire.js\";\nimport Login from \"./components/Login/Login.js\";\nimport { FadeLoader } from \"react-spinners\";\nimport Chat from \"./components/Chat/Chat.js\";\nimport NicknameInput from \"./components/NicknameInput/NicknameInput.js\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.initiateConnection = () => {\n      this.socket = io.connect(\"http://localhost:8080\");\n    };\n\n    this.initiateMessageListener = () => {\n      this.socket.on(\"chat message\", msg => {\n        this.setState({\n          messages: [...this.state.messages, msg.message]\n        });\n      });\n    };\n\n    this.initiateNewJoinListener = () => {\n      this.socket.on(\"newly joined\", data => {\n        this.setState({\n          systemMessage: data.message\n        });\n      });\n    };\n\n    this.logout = () => {\n      fire.auth().signOut();\n    };\n\n    this.authListener = () => {\n      fire.auth().onAuthStateChanged(user => {\n        if (user) {\n          this.setState({\n            user: user,\n            loaded: true\n          }); // this.getUserInfo(user);\n\n          localStorage.setItem(\"user\", user.uid);\n        } else {\n          this.setState({\n            user: null,\n            loaded: true\n          });\n          localStorage.removeItem(\"user\");\n        }\n      });\n    };\n\n    this.getNickName = (nickName, userLanguageCode, targetLanguageCode) => {\n      this.setState({\n        nickName: nickName,\n        userLanguageCode: userLanguageCode,\n        targetLanguageCode: targetLanguageCode\n      });\n    };\n\n    this.getUserLanguageCode = userLanguageCode => {\n      this.setState({\n        userLanguageCode: userLanguageCode\n      });\n    };\n\n    this.getTargetLanguageCode = targetLanguageCode => {\n      this.setState({\n        targetLanguageCode: targetLanguageCode\n      });\n    };\n\n    this.getUserInfo = user => {\n      this.setState({\n        user: user,\n        loaded: true\n      });\n    };\n\n    this.displayLogin = () => {\n      if (this.state.user && this.state.nickName) {\n        return React.createElement(Chat, {\n          nickName: this.state.nickName,\n          logout: this.logout,\n          userLanguageCode: this.userLanguageCode,\n          targetLanguageCode: this.targetLanguageCode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n      } else if (!this.state.loaded) {\n        return React.createElement(React.Fragment, null, React.createElement(FadeLoader, {\n          sizeUnit: \"px\",\n          size: 500,\n          color: \"#123abc\",\n          loading: !this.state.loaded,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }), \" \");\n      } else if (!this.state.user) {\n        return React.createElement(React.Fragment, null, React.createElement(Login, {\n          getNickName: this.getNickName,\n          getUserInfo: this.getUserInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }));\n      } else if (!this.state.nickName) {\n        return React.createElement(React.Fragment, null, React.createElement(NicknameInput, {\n          getNickName: this.getNickName,\n          languageList: this.state.languageList,\n          userLanguageCode: this.state.userLanguageCode,\n          targetLanguageCode: this.state.targetLanguageCode,\n          getUserLanguageCode: this.getUserLanguageCode,\n          getTargetLanguageCode: this.getTargetLanguageCode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.socket = null;\n    this.state = {\n      userName: \"\",\n      systemMessage: \"\",\n      messageText: \"\",\n      messages: [],\n      user: null,\n      loaded: false,\n      nickName: null,\n      userLanguageCode: \"en\",\n      targetLanguageCode: \"en\",\n      languageList: {\n        Arabic: \"ar\",\n        Chinese: \"zh\",\n        Dutch: \"nl\",\n        English: \"en\",\n        French: \"fr\",\n        German: \"de\",\n        Hindi: \"hi\",\n        Italian: \"it\",\n        Japanese: \"ja\",\n        Korean: \"ko\",\n        Portuguese: \"pt\",\n        Russian: \"ru\",\n        Spanish: \"es\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.authListener(); // this.initiateConnection();\n    // this.initiateMessageListener();\n    // this.initiateNewJoinListener();\n  }\n\n  render() {\n    console.log(\"state\", this.state);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.loaded ? React.createElement(React.Fragment, null, this.displayLogin()) : React.createElement(FadeLoader, {\n      sizeUnit: \"px\",\n      size: 500,\n      color: \"#123abc\",\n      loading: !this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jungrae/Desktop/Projects/react_socket_io_chat/frontend/src/App.js"],"names":["React","io","fire","Login","FadeLoader","Chat","NicknameInput","App","Component","constructor","initiateConnection","socket","connect","initiateMessageListener","on","msg","setState","messages","state","message","initiateNewJoinListener","data","systemMessage","logout","auth","signOut","authListener","onAuthStateChanged","user","loaded","localStorage","setItem","uid","removeItem","getNickName","nickName","userLanguageCode","targetLanguageCode","getUserLanguageCode","getTargetLanguageCode","getUserInfo","displayLogin","languageList","userName","messageText","Arabic","Chinese","Dutch","English","French","German","Hindi","Italian","Japanese","Korean","Portuguese","Russian","Spanish","componentDidMount","render","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport fire from \"./config/Fire.js\";\nimport Login from \"./components/Login/Login.js\";\nimport { FadeLoader } from \"react-spinners\";\nimport Chat from \"./components/Chat/Chat.js\";\nimport NicknameInput from \"./components/NicknameInput/NicknameInput.js\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.socket = null;\n    this.state = {\n      userName: \"\",\n      systemMessage: \"\",\n      messageText: \"\",\n      messages: [],\n      user: null,\n      loaded: false,\n      nickName: null,\n      userLanguageCode: \"en\",\n      targetLanguageCode: \"en\",\n      languageList: {\n        Arabic: \"ar\",\n        Chinese: \"zh\",\n        Dutch: \"nl\",\n        English: \"en\",\n        French: \"fr\",\n        German: \"de\",\n        Hindi: \"hi\",\n        Italian: \"it\",\n        Japanese: \"ja\",\n        Korean: \"ko\",\n        Portuguese: \"pt\",\n        Russian: \"ru\",\n        Spanish: \"es\"\n      }\n    };\n  }\n\n  initiateConnection = () => {\n    this.socket = io.connect(\"http://localhost:8080\");\n  };\n\n  initiateMessageListener = () => {\n    this.socket.on(\"chat message\", msg => {\n      this.setState({\n        messages: [...this.state.messages, msg.message]\n      });\n    });\n  };\n\n  initiateNewJoinListener = () => {\n    this.socket.on(\"newly joined\", data => {\n      this.setState({\n        systemMessage: data.message\n      });\n    });\n  };\n\n  logout = () => {\n    fire.auth().signOut();\n  };\n\n  authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user: user,\n          loaded: true\n        });\n        // this.getUserInfo(user);\n        localStorage.setItem(\"user\", user.uid);\n      } else {\n        this.setState({\n          user: null,\n          loaded: true\n        });\n        localStorage.removeItem(\"user\");\n      }\n    });\n  };\n\n  getNickName = (nickName, userLanguageCode, targetLanguageCode) => {\n    this.setState({\n      nickName: nickName,\n      userLanguageCode: userLanguageCode,\n      targetLanguageCode: targetLanguageCode\n    });\n  };\n\n  getUserLanguageCode = userLanguageCode => {\n    this.setState({\n      userLanguageCode: userLanguageCode\n    });\n  };\n\n  getTargetLanguageCode = targetLanguageCode => {\n    this.setState({\n      targetLanguageCode: targetLanguageCode\n    });\n  };\n\n  getUserInfo = user => {\n    this.setState({\n      user: user,\n      loaded: true\n    });\n  };\n\n  componentDidMount() {\n    this.authListener();\n    // this.initiateConnection();\n    // this.initiateMessageListener();\n    // this.initiateNewJoinListener();\n  }\n\n  displayLogin = () => {\n    if (this.state.user && this.state.nickName) {\n      return (\n        <Chat\n          nickName={this.state.nickName}\n          logout={this.logout}\n          userLanguageCode={this.userLanguageCode}\n          targetLanguageCode={this.targetLanguageCode}\n        />\n      );\n    } else if (!this.state.loaded) {\n      return (\n        <>\n          <FadeLoader\n            sizeUnit={\"px\"}\n            size={500}\n            color={\"#123abc\"}\n            loading={!this.state.loaded}\n          />{\" \"}\n        </>\n      );\n    } else if (!this.state.user) {\n      return (\n        <>\n          <Login\n            getNickName={this.getNickName}\n            getUserInfo={this.getUserInfo}\n          />\n        </>\n      );\n    } else if (!this.state.nickName) {\n      return (\n        <>\n          <NicknameInput\n            getNickName={this.getNickName}\n            languageList={this.state.languageList}\n            userLanguageCode={this.state.userLanguageCode}\n            targetLanguageCode={this.state.targetLanguageCode}\n            getUserLanguageCode={this.getUserLanguageCode}\n            getTargetLanguageCode={this.getTargetLanguageCode}\n          />\n        </>\n      );\n    }\n  };\n\n  render() {\n    console.log(\"state\", this.state);\n    return (\n      <div className=\"App\">\n        {this.state.loaded ? (\n          <>{this.displayLogin()}</>\n        ) : (\n          <FadeLoader\n            sizeUnit={\"px\"}\n            size={500}\n            color={\"#123abc\"}\n            loading={!this.state.loaded}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}